"use client"

import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v14-appRouter";
import { CssBaseline, ThemeProvider } from "@mui/material";
import { theme } from "./theme/theme";
import { CurrencyProvider } from "./context/CurrencyContext";
import './globals.css';
import { Box, Breadcrumbs, Link as MuiLink, Typography } from '@mui/material';
import HomeIcon from '@mui/icons-material/Home';
import BarChartIcon from '@mui/icons-material/BarChart';
import { useRouter } from 'next/navigation'
import NextLink from 'next/link'; 

//HTMLの情報
const inter = Inter({ subsets: ["latin"] });

//下記のmetadataはuse clientでは使えないのでexportを外す
const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

//MUIの共通のlayout
const IconBreadcrumbs = ({ children }: { children: React.ReactNode }) => {
  const router = useRouter();

  const toReport = (e: React.MouseEvent<HTMLAnchorElement>) => {
    e.preventDefault();
    console.log('Navigating to report page');
    router.push('/report');
  };

  return (
    <div role="presentation">
      <Box
        sx={{
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          bgcolor: theme.palette.blueColor.main,
          minHeight: "10vh",
          padding: "20px"
        }}
      >
        <Typography
          sx={{ textAlign: "left", fontSize: "44px", color: (theme)=>theme.palette.greenColor.main }}
          variant="h1"
          fontWeight={"fontWeightRegular"}
        >
          <span style={{fontSize:"44px"}}>為替速報2.0</span>
        </Typography>
        <Breadcrumbs aria-label="breadcrumb" sx={{ textAlign: "right" }}>
          <NextLink href="/" passHref legacyBehavior>
            <MuiLink underline="hover" sx={{ display: 'flex', alignItems: 'center', listStyle: "none" }} color="inherit">
              <HomeIcon sx={{ mr: 0.5 }} fontSize="inherit" />
              Home
            </MuiLink>
          </NextLink>
          {/* <Link  component="a" underline="hover" sx={{ display: 'flex', alignItems: 'center',listStyle:"none" }} color="inherit" href="/">
            <HomeIcon sx={{ mr: 0.5 }} fontSize="inherit" />
            Home
          </Link> */}
          {/* <Link
            underline="hover"
            sx={{ display: 'flex', alignItems: 'center' }}
            color="inherit"
            href="/report"
            onClick={toReport}
          >
            <BarChartIcon sx={{ mr: 0.5 }} fontSize="inherit" />
            <span>Report</span>
          </Link> */}
        </Breadcrumbs>
      </Box>
      {children}
    </div>
  );
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="ja">
      <body className={inter.className}>
        <AppRouterCacheProvider>
          <ThemeProvider theme={theme}>
            <CssBaseline />
            <CurrencyProvider>
              <IconBreadcrumbs>
                {children}
              </IconBreadcrumbs>
            </CurrencyProvider>
          </ThemeProvider>
        </AppRouterCacheProvider>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossOrigin="anonymous"></link>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossOrigin="anonymous"></script>
      </body>
    </html>
  );
}


//デフォルトの設定
// import type { Metadata } from "next";
// import { Inter } from "next/font/google";
// import { AppRouterCacheProvider } from "@mui/material-nextjs/v14-appRouter";
// import "./globals.css";

// const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="ja">
//       <body className={inter.className}>
//         <AppRouterCacheProvider>{children}</AppRouterCacheProvider>
//       </body>
//     </html>
//   );
// }